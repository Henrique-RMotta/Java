/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.senai.henriquemotta.simuladorrpg;

import edu.senai.henriquemotta.simuladorrpg.classes.Equipamento;
import edu.senai.henriquemotta.simuladorrpg.model.EquipamentoEnum;
import edu.senai.henriquemotta.simuladorrpg.model.MonstroEnum;
import edu.senai.henriquemotta.simuladorrpg.classes.Jogador;
import edu.senai.henriquemotta.simuladorrpg.classes.Monstro;
import edu.senai.henriquemotta.simuladorrpg.service.EquipamentoService;
import edu.senai.henriquemotta.simuladorrpg.service.MonstroService;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultListModel;
        

public class SimuladorRPG extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SimuladorRPG.class.getName());

    /**
     * Creates new form Principal
     */
    
    public ArrayList<Equipamento> equipamentos; 
    public ArrayList<Monstro> monstros;
    public Jogador jogador;
    public Monstro m;
    public DefaultListModel<Equipamento> inventarioTela;
    public Random r = new Random(); 
    public int contadorPorta =0;
    public SimuladorRPG() {
        //<editor-fold>
        equipamentos = (ArrayList<Equipamento>) EquipamentoService.ObterEquipamentos();
        monstros = (ArrayList<Monstro>) MonstroService.ObterMonstros();
        jogador = new Jogador();
        jogador.setNome("Morsa");
        jogador.setNivel(5);

        
        initComponents();
        //</editor-fold>
        
        inventarioTela = new DefaultListModel<>() ;
        
        inventarioTela.addElement(equipamentos.get(r.nextInt(0,equipamentos.size())));
        inventarioLista.setModel(inventarioTela);
        
        inventarioTela.addElement(equipamentos.get(r.nextInt(0,equipamentos.size())));
        inventarioLista.setModel(inventarioTela);
        
        atualizarInfo();

        // Simula o status do jogador

        
       /*
        System.out.println("Você (Nível " + jogador.getNivel() + ") chuta a porta!");
        System.out.println("Aparece um " + m.getNome() + " de Nível " + m.getNivel() + "!");
        System.out.println("Sua força de combate total é: "  + jogador.getNivel());//
        System.out.println("A força do monstro é: " + m.getNivel());
       if (jogador.getNivel() > m.getNivel()) {
            System.out.println("\nVITÓRIA! Você derrotou o monstro e pegou o tesouro!");
        } else {
            System.out.println("\nDERROTA! Você precisa fugir para não sofrer coisas ruins!");
        }
        */
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventarioLista = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        monstroInfo = new javax.swing.JTextArea();
        equiparBtn = new javax.swing.JButton();
        infoJogador = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        equipamentosEquipados = new javax.swing.JTextArea();
        fugirBtn = new javax.swing.JButton();
        Atacarbtn = new javax.swing.JButton();
        abrirPortabtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(inventarioLista);

        monstroInfo.setColumns(20);
        monstroInfo.setRows(5);
        jScrollPane2.setViewportView(monstroInfo);

        equiparBtn.setText("Equipar");
        equiparBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equiparBtnActionPerformed(evt);
            }
        });

        infoJogador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoJogadorActionPerformed(evt);
            }
        });

        equipamentosEquipados.setColumns(20);
        equipamentosEquipados.setRows(5);
        equipamentosEquipados.setText("Equipamentos\nCabeça: ---- \nArmadura: ---- \nCalçado: ---- \nMãos: -----");
        equipamentosEquipados.setToolTipText("");
        jScrollPane4.setViewportView(equipamentosEquipados);

        fugirBtn.setText("Fugir");
        fugirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fugirBtnActionPerformed(evt);
            }
        });

        Atacarbtn.setText("Atacar");
        Atacarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtacarbtnActionPerformed(evt);
            }
        });

        abrirPortabtn.setText("Abrir a Porta");
        abrirPortabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirPortabtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Inventário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(infoJogador)
                    .addComponent(jScrollPane4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(abrirPortabtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Atacarbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fugirBtn))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(equiparBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(infoJogador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(abrirPortabtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Atacarbtn)
                            .addComponent(fugirBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equiparBtn)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void infoJogadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoJogadorActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_infoJogadorActionPerformed
    
    private void atualizarInfo() {
        infoJogador.setText(jogador.infoJogador());
        equipamentosEquipados.setText("Equipamentos\n" +
                                      "Cabeça:" + jogador.getCabeca()
                                      + "\n" +
                                      "Armadura:"+jogador.getArmadura()
                                      + "\n" + 
                                      "Calçado:"+jogador.getCalcado()
                                      + "\n" + 
                                      "Mãos:"+jogador.getMao());
    }
    private void abrirPortabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirPortabtnActionPerformed
        // TODO add your handling code here:
        Random r = new Random();
        contadorPorta  ++;
        if(contadorPorta == 1){
        m = monstros.get(r.nextInt(0,monstros.size()));
        monstroInfo.setText("Você (Nível " + jogador.getNivel() + ") chuta a porta!" + "\n"+ 
                              "Aparece um " + m.getNome() + " de Nível " + m.getNivel() + "!" + "\n" +
                               "Sua força de combate total é: "  + jogador.getPoder() +  "\n" +
                               "A força do monstro é: " + m.getNivel());
    } 
        if(contadorPorta >= 2) {
        monstroInfo.append("\nA porta já foi aberta");
     }
         
    }//GEN-LAST:event_abrirPortabtnActionPerformed

    private void AtacarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtacarbtnActionPerformed
        if (jogador.getPoder()> m.getNivel()){
            monstroInfo.setText("Boa !! você ganhou e descobriu o tesouro !!\n");
            Equipamento e = equipamentos.get(r.nextInt(0,equipamentos.size()));
            monstroInfo.append(e.toString());
            jogador.setNivel(jogador.getNivel()+1);
            inventarioTela.addElement(e);
        } else {
            monstroInfo.setText("Que pena você perdeu. Ocasionando a perda de um nível\n");
            monstroInfo.append("Nível Atual:" + jogador.getNivel());
            jogador.setNivel(jogador.getNivel()-1);
        }
        contadorPorta =0; 
        atualizarInfo();
    }//GEN-LAST:event_AtacarbtnActionPerformed

    private void fugirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fugirBtnActionPerformed
       int chance = r.nextInt(0,10);
        if (chance == 1) {
           monstroInfo.setText("Você fugiu da luta");
       } else {
           monstroInfo.setText("Você não conseguiu fugir da luta");
           jogador.setNivel(jogador.getNivel()-3);
           
       }
        contadorPorta =0; 
    }//GEN-LAST:event_fugirBtnActionPerformed

    private void equiparBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equiparBtnActionPerformed
        Equipamento selecionado = inventarioLista.getSelectedValue();
        
        switch (selecionado.getTipo()){
            case ARMADURA -> jogador.setArmadura(selecionado);
            case CABECAL -> jogador.setCabeca(selecionado);
            case CALCADO -> jogador.setCalcado(selecionado);
            case MAO -> jogador.setMao(selecionado);
    }
        atualizarInfo();
        inventarioTela.remove(inventarioLista.getSelectedIndex());
    }//GEN-LAST:event_equiparBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new SimuladorRPG().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atacarbtn;
    private javax.swing.JButton abrirPortabtn;
    private javax.swing.JTextArea equipamentosEquipados;
    private javax.swing.JButton equiparBtn;
    private javax.swing.JButton fugirBtn;
    private javax.swing.JTextField infoJogador;
    private javax.swing.JList<Equipamento> inventarioLista;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea monstroInfo;
    // End of variables declaration//GEN-END:variables
}
